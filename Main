package com.company;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        int key;
        String plaintext;
        String ciphertext;
        key = get_encryption_key();
        plaintext = get_string();
        ciphertext = encode(plaintext,key);
        System.out.print("ciphertext: " + ciphertext);
    }

    static int get_encryption_key() {
        Scanner input = new Scanner(System.in);
        int key;
        do {
            System.out.print("Enter the encryption key: ");
            key = input.nextInt();
        } while ((key > 25) || (key < 1));
        return key;
    }

    static String get_string(){
        Scanner input = new Scanner(System.in);
        String plaintext;
        System.out.print("Enter the message to be encrypted: ");
        plaintext = input.nextLine();
        return plaintext;
    }

    static String encode(String text_to_encode, int key) {
        // a is 97, z is 122
        // A is 65, Z is 90
        int test_asci_code = 0;
        int cipher_asci_codes[] = new int[text_to_encode.length()];
        String cipher = "";
        for (int i = 0 ; i < text_to_encode.length() ; i++) {
            char test_text;
            test_text = text_to_encode.charAt(i);
            if (Character.isLetter(test_text)) {
                test_asci_code = key + text_to_encode.charAt(i);
                if (Character.isLowerCase(test_text)) {
                    if (test_asci_code > 122) {
                        cipher_asci_codes[i] = (test_asci_code - 97) % 26 + 97;
                    } else {
                        cipher_asci_codes[i] = test_asci_code;
                    }
                } else if (test_asci_code > 90) {
                    cipher_asci_codes[i] = (test_asci_code - 65) % 26 + 65;
                } else{
                    cipher_asci_codes[i] = test_asci_code;
                }
                cipher = cipher + "" + (char)cipher_asci_codes[i];
            } else {
                cipher = cipher + "" + text_to_encode.charAt(i);
            }
            }
        return cipher;
    }
}
